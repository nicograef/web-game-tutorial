/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/Ball.ts":
/*!*********************!*\
  !*** ./src/Ball.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ Paddle
/* harmony export */ });
class Paddle {
    constructor(gameWidth, gameHeight) {
        this.gameWidth = gameWidth;
        this.gameHeight = gameHeight;
        this.radius = 10;
        this.padding = 1;
        this.speed = 40;
        this.vx = 1;
        this.vy = -1;
        this.x = (this.gameWidth - this.radius) / 2;
        this.y = (this.gameHeight - this.radius - this.padding) / 2;
        this.direction = null;
    }
    moveLeft() {
        this.direction = 'left';
    }
    stopLeft() {
        if (this.direction !== 'left')
            return;
        this.direction = null;
    }
    moveRight() {
        this.direction = 'right';
    }
    stopRight() {
        if (this.direction !== 'right')
            return;
        this.direction = null;
    }
    stop() {
        this.direction = null;
    }
    update(deltaTime) {
        this.x += (this.vx * this.speed) / deltaTime;
        this.y += (this.vy * this.speed) / deltaTime;
        if (this.x < 0 + this.radius + this.padding) {
            this.x = this.radius + this.padding;
            this.vx = -this.vx;
        }
        if (this.x + this.radius > this.gameWidth - this.padding) {
            this.x = this.gameWidth - this.radius - this.padding;
            this.vx = -this.vx;
        }
        if (this.y < 0 + this.radius + this.padding) {
            this.y = this.radius + this.padding;
            this.vy = -this.vy;
        }
        if (this.y > this.gameHeight - this.radius - this.padding) {
            this.y = this.gameHeight - this.radius - this.padding;
            this.vy = -this.vy;
        }
    }
    draw(context) {
        const { x, y, radius } = this;
        context.beginPath();
        context.arc(x, y, radius, 0, 2 * Math.PI);
        context.fill();
        context.closePath();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmFsbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9CYWxsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQyxPQUFPLE9BQU8sTUFBTTtJQVV6QixZQUFvQixTQUFpQixFQUFVLFVBQWtCO1FBQTdDLGNBQVMsR0FBVCxTQUFTLENBQVE7UUFBVSxlQUFVLEdBQVYsVUFBVSxDQUFRO1FBVHpELFdBQU0sR0FBRyxFQUFFLENBQUE7UUFDWCxZQUFPLEdBQUcsQ0FBQyxDQUFBO1FBQ1gsVUFBSyxHQUFHLEVBQUUsQ0FBQTtRQUdWLE9BQUUsR0FBRyxDQUFDLENBQUE7UUFDTixPQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUE7UUFJYixJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFBO1FBQzNDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQTtRQUMzRCxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQTtJQUN2QixDQUFDO0lBRU0sUUFBUTtRQUNiLElBQUksQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFBO0lBQ3pCLENBQUM7SUFFTSxRQUFRO1FBQ2IsSUFBSSxJQUFJLENBQUMsU0FBUyxLQUFLLE1BQU07WUFBRSxPQUFNO1FBQ3JDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFBO0lBQ3ZCLENBQUM7SUFFTSxTQUFTO1FBQ2QsSUFBSSxDQUFDLFNBQVMsR0FBRyxPQUFPLENBQUE7SUFDMUIsQ0FBQztJQUVNLFNBQVM7UUFDZCxJQUFJLElBQUksQ0FBQyxTQUFTLEtBQUssT0FBTztZQUFFLE9BQU07UUFDdEMsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUE7SUFDdkIsQ0FBQztJQUVNLElBQUk7UUFDVCxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQTtJQUN2QixDQUFDO0lBRU0sTUFBTSxDQUFDLFNBQWlCO1FBQzdCLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxTQUFTLENBQUE7UUFDNUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLFNBQVMsQ0FBQTtRQUU1QyxJQUFJLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUMzQyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQTtZQUNuQyxJQUFJLENBQUMsRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQTtTQUNuQjtRQUNELElBQUksSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUN4RCxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFBO1lBQ3BELElBQUksQ0FBQyxFQUFFLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFBO1NBQ25CO1FBRUQsSUFBSSxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDM0MsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUE7WUFDbkMsSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUE7U0FDbkI7UUFDRCxJQUFJLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDekQsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQTtZQUNyRCxJQUFJLENBQUMsRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQTtTQUNuQjtJQUNILENBQUM7SUFFTSxJQUFJLENBQUMsT0FBaUM7UUFDM0MsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFBO1FBQzdCLE9BQU8sQ0FBQyxTQUFTLEVBQUUsQ0FBQTtRQUNuQixPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFBO1FBQ3pDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQTtRQUNkLE9BQU8sQ0FBQyxTQUFTLEVBQUUsQ0FBQTtJQUNyQixDQUFDO0NBQ0YifQ==

/***/ }),

/***/ "./src/InputHandler.ts":
/*!*****************************!*\
  !*** ./src/InputHandler.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ InputHandler
/* harmony export */ });
/* harmony import */ var _enums__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enums */ "./src/enums.ts");

class InputHandler {
    constructor(handlers) {
        document.addEventListener('keydown', (keyDownEvent) => {
            // keyDownEvent.preventDefault()
            if (keyDownEvent.code === _enums__WEBPACK_IMPORTED_MODULE_0__.KEYS.LEFT)
                handlers.arrowLeftPressed();
            else if (keyDownEvent.code === _enums__WEBPACK_IMPORTED_MODULE_0__.KEYS.RIGHT)
                handlers.arrowRightPressed();
        });
        document.addEventListener('keyup', (keyDownEvent) => {
            // keyDownEvent.preventDefault()
            if (keyDownEvent.code === _enums__WEBPACK_IMPORTED_MODULE_0__.KEYS.LEFT)
                handlers.arrowLeftReleased();
            else if (keyDownEvent.code === _enums__WEBPACK_IMPORTED_MODULE_0__.KEYS.RIGHT)
                handlers.arrowRightReleased();
        });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW5wdXRIYW5kbGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0lucHV0SGFuZGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sU0FBUyxDQUFBO0FBUzlCLE1BQU0sQ0FBQyxPQUFPLE9BQU8sWUFBWTtJQUMvQixZQUFZLFFBQXdCO1FBQ2xDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxZQUFZLEVBQUUsRUFBRTtZQUNwRCxnQ0FBZ0M7WUFDaEMsSUFBSSxZQUFZLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQyxJQUFJO2dCQUFFLFFBQVEsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFBO2lCQUMzRCxJQUFJLFlBQVksQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDLEtBQUs7Z0JBQUUsUUFBUSxDQUFDLGlCQUFpQixFQUFFLENBQUE7UUFDekUsQ0FBQyxDQUFDLENBQUE7UUFFRixRQUFRLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLEVBQUU7WUFDbEQsZ0NBQWdDO1lBQ2hDLElBQUksWUFBWSxDQUFDLElBQUksS0FBSyxJQUFJLENBQUMsSUFBSTtnQkFBRSxRQUFRLENBQUMsaUJBQWlCLEVBQUUsQ0FBQTtpQkFDNUQsSUFBSSxZQUFZLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQyxLQUFLO2dCQUFFLFFBQVEsQ0FBQyxrQkFBa0IsRUFBRSxDQUFBO1FBQzFFLENBQUMsQ0FBQyxDQUFBO0lBQ0osQ0FBQztDQUNGIn0=

/***/ }),

/***/ "./src/Paddle.ts":
/*!***********************!*\
  !*** ./src/Paddle.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ Paddle
/* harmony export */ });
class Paddle {
    constructor(gameWidth, gameHeight) {
        this.gameWidth = gameWidth;
        this.gameHeight = gameHeight;
        this.width = 150;
        this.height = 25;
        this.padding = 5;
        this.speed = 40;
        this.x = (this.gameWidth - this.width) / 2;
        this.y = this.gameHeight - this.height - this.padding;
        this.direction = null;
    }
    moveLeft() {
        this.direction = 'left';
    }
    stopLeft() {
        if (this.direction !== 'left')
            return;
        this.direction = null;
    }
    moveRight() {
        this.direction = 'right';
    }
    stopRight() {
        if (this.direction !== 'right')
            return;
        this.direction = null;
    }
    stop() {
        this.direction = null;
    }
    update(deltaTime) {
        if (this.direction === null)
            return;
        else if (this.direction === 'left')
            this.x -= this.speed / deltaTime;
        else if (this.direction === 'right')
            this.x += this.speed / deltaTime;
        if (this.x < 0 + this.padding) {
            this.x = this.padding;
        }
        if (this.x + this.width > this.gameWidth - this.padding) {
            this.x = this.gameWidth - this.width - this.padding;
        }
    }
    draw(context) {
        const { x, y, width, height } = this;
        context.fillRect(x, y, width, height);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGFkZGxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL1BhZGRsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUMsT0FBTyxPQUFPLE1BQU07SUFTekIsWUFBb0IsU0FBaUIsRUFBVSxVQUFrQjtRQUE3QyxjQUFTLEdBQVQsU0FBUyxDQUFRO1FBQVUsZUFBVSxHQUFWLFVBQVUsQ0FBUTtRQVJ6RCxVQUFLLEdBQUcsR0FBRyxDQUFBO1FBQ1gsV0FBTSxHQUFHLEVBQUUsQ0FBQTtRQUNYLFlBQU8sR0FBRyxDQUFDLENBQUE7UUFDWCxVQUFLLEdBQUcsRUFBRSxDQUFBO1FBTWhCLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUE7UUFDMUMsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQTtRQUNyRCxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQTtJQUN2QixDQUFDO0lBRU0sUUFBUTtRQUNiLElBQUksQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFBO0lBQ3pCLENBQUM7SUFFTSxRQUFRO1FBQ2IsSUFBSSxJQUFJLENBQUMsU0FBUyxLQUFLLE1BQU07WUFBRSxPQUFNO1FBQ3JDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFBO0lBQ3ZCLENBQUM7SUFFTSxTQUFTO1FBQ2QsSUFBSSxDQUFDLFNBQVMsR0FBRyxPQUFPLENBQUE7SUFDMUIsQ0FBQztJQUVNLFNBQVM7UUFDZCxJQUFJLElBQUksQ0FBQyxTQUFTLEtBQUssT0FBTztZQUFFLE9BQU07UUFDdEMsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUE7SUFDdkIsQ0FBQztJQUVNLElBQUk7UUFDVCxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQTtJQUN2QixDQUFDO0lBRU0sTUFBTSxDQUFDLFNBQWlCO1FBQzdCLElBQUksSUFBSSxDQUFDLFNBQVMsS0FBSyxJQUFJO1lBQUUsT0FBTTthQUM5QixJQUFJLElBQUksQ0FBQyxTQUFTLEtBQUssTUFBTTtZQUFFLElBQUksQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLEtBQUssR0FBRyxTQUFTLENBQUE7YUFDL0QsSUFBSSxJQUFJLENBQUMsU0FBUyxLQUFLLE9BQU87WUFBRSxJQUFJLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxLQUFLLEdBQUcsU0FBUyxDQUFBO1FBRXJFLElBQUksSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUM3QixJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUE7U0FDdEI7UUFDRCxJQUFJLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDdkQsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQTtTQUNwRDtJQUNILENBQUM7SUFFTSxJQUFJLENBQUMsT0FBaUM7UUFDM0MsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQTtRQUNwQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFBO0lBQ3ZDLENBQUM7Q0FDRiJ9

/***/ }),

/***/ "./src/enums.ts":
/*!**********************!*\
  !*** ./src/enums.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "KEYS": () => /* binding */ KEYS
/* harmony export */ });
var KEYS;
(function (KEYS) {
    KEYS["LEFT"] = "ArrowLeft";
    KEYS["RIGHT"] = "ArrowRight";
})(KEYS || (KEYS = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW51bXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvZW51bXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFOLElBQVksSUFHWDtBQUhELFdBQVksSUFBSTtJQUNkLDBCQUFrQixDQUFBO0lBQ2xCLDRCQUFvQixDQUFBO0FBQ3RCLENBQUMsRUFIVyxJQUFJLEtBQUosSUFBSSxRQUdmIn0=

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _InputHandler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./InputHandler */ "./src/InputHandler.ts");
/* harmony import */ var _Ball__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Ball */ "./src/Ball.ts");
/* harmony import */ var _Paddle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Paddle */ "./src/Paddle.ts");



const GAME_WIDTH = 900;
const GAME_HEIGHT = 600;
const canvas = document.querySelector('#screen');
const context = canvas.getContext('2d');
const paddle = new _Paddle__WEBPACK_IMPORTED_MODULE_2__.default(GAME_WIDTH, GAME_HEIGHT);
const ball = new _Ball__WEBPACK_IMPORTED_MODULE_1__.default(GAME_WIDTH, GAME_HEIGHT);
new _InputHandler__WEBPACK_IMPORTED_MODULE_0__.default({
    arrowLeftPressed: () => paddle.moveLeft(),
    arrowLeftReleased: () => paddle.stopLeft(),
    arrowRightPressed: () => paddle.moveRight(),
    arrowRightReleased: () => paddle.stopRight(),
});
let lastTime = 0;
function gameLoop(timestamp) {
    let deltaTime = timestamp - lastTime;
    lastTime = timestamp;
    context.clearRect(0, 0, GAME_WIDTH, GAME_HEIGHT);
    paddle.update(deltaTime);
    paddle.draw(context);
    ball.update(deltaTime);
    ball.draw(context);
    window.requestAnimationFrame(gameLoop);
}
gameLoop(1);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxZQUFZLE1BQU0sZ0JBQWdCLENBQUE7QUFDekMsT0FBTyxJQUFJLE1BQU0sUUFBUSxDQUFBO0FBQ3pCLE9BQU8sTUFBTSxNQUFNLFVBQVUsQ0FBQTtBQUU3QixNQUFNLFVBQVUsR0FBRyxHQUFHLENBQUE7QUFDdEIsTUFBTSxXQUFXLEdBQUcsR0FBRyxDQUFBO0FBRXZCLE1BQU0sTUFBTSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQW9CLFNBQVMsQ0FBRSxDQUFBO0FBQ3BFLE1BQU0sT0FBTyxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFFLENBQUE7QUFFeEMsTUFBTSxNQUFNLEdBQUcsSUFBSSxNQUFNLENBQUMsVUFBVSxFQUFFLFdBQVcsQ0FBQyxDQUFBO0FBQ2xELE1BQU0sSUFBSSxHQUFHLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRSxXQUFXLENBQUMsQ0FBQTtBQUU5QyxJQUFJLFlBQVksQ0FBQztJQUNmLGdCQUFnQixFQUFFLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUU7SUFDekMsaUJBQWlCLEVBQUUsR0FBRyxFQUFFLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRTtJQUMxQyxpQkFBaUIsRUFBRSxHQUFHLEVBQUUsQ0FBQyxNQUFNLENBQUMsU0FBUyxFQUFFO0lBQzNDLGtCQUFrQixFQUFFLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxTQUFTLEVBQUU7Q0FDN0MsQ0FBQyxDQUFBO0FBRUYsSUFBSSxRQUFRLEdBQUcsQ0FBQyxDQUFBO0FBQ2hCLFNBQVMsUUFBUSxDQUFDLFNBQThCO0lBQzlDLElBQUksU0FBUyxHQUFHLFNBQVMsR0FBRyxRQUFRLENBQUE7SUFDcEMsUUFBUSxHQUFHLFNBQVMsQ0FBQTtJQUVwQixPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsVUFBVSxFQUFFLFdBQVcsQ0FBQyxDQUFBO0lBRWhELE1BQU0sQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUE7SUFDeEIsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQTtJQUVwQixJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFBO0lBQ3RCLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUE7SUFFbEIsTUFBTSxDQUFDLHFCQUFxQixDQUFDLFFBQVEsQ0FBQyxDQUFBO0FBRXhDLENBQUM7QUFFRCxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUEifQ==

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./src/index.ts");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItZ2FtZS10dXRvcmlhbC8uL3NyYy9CYWxsLnRzIiwid2VicGFjazovL3dlYi1nYW1lLXR1dG9yaWFsLy4vc3JjL0lucHV0SGFuZGxlci50cyIsIndlYnBhY2s6Ly93ZWItZ2FtZS10dXRvcmlhbC8uL3NyYy9QYWRkbGUudHMiLCJ3ZWJwYWNrOi8vd2ViLWdhbWUtdHV0b3JpYWwvLi9zcmMvZW51bXMudHMiLCJ3ZWJwYWNrOi8vd2ViLWdhbWUtdHV0b3JpYWwvLi9zcmMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vd2ViLWdhbWUtdHV0b3JpYWwvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vd2ViLWdhbWUtdHV0b3JpYWwvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3dlYi1nYW1lLXR1dG9yaWFsL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vd2ViLWdhbWUtdHV0b3JpYWwvd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCIsIndlYnBhY2s6Ly93ZWItZ2FtZS10dXRvcmlhbC93ZWJwYWNrL3N0YXJ0dXAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxlQUFlO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQywyaEc7Ozs7Ozs7Ozs7Ozs7OztBQzVEWjtBQUNoQjtBQUNmO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyw2Q0FBUztBQUMvQztBQUNBLDJDQUEyQyw4Q0FBVTtBQUNyRDtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esc0NBQXNDLDZDQUFTO0FBQy9DO0FBQ0EsMkNBQTJDLDhDQUFVO0FBQ3JEO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSwyQ0FBMkMsdThCOzs7Ozs7Ozs7Ozs7OztBQ25CNUI7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHNCQUFzQjtBQUNyQztBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsK29FOzs7Ozs7Ozs7Ozs7OztBQ2xEcEM7QUFDUDtBQUNBO0FBQ0E7QUFDQSxDQUFDLG9CQUFvQjtBQUNyQiwyQ0FBMkMsbVM7Ozs7Ozs7Ozs7Ozs7O0FDTEQ7QUFDaEI7QUFDSTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiw0Q0FBTTtBQUN6QixpQkFBaUIsMENBQUk7QUFDckIsSUFBSSxrREFBWTtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsbWpEOzs7Ozs7VUMzQjNDO1VBQ0E7O1VBRUE7VUFDQTtVQUNBO1VBQ0E7VUFDQTtVQUNBO1VBQ0E7VUFDQTtVQUNBO1VBQ0E7VUFDQTtVQUNBOztVQUVBO1VBQ0E7O1VBRUE7VUFDQTtVQUNBOzs7OztXQ3JCQTtXQUNBO1dBQ0E7V0FDQTtXQUNBLHdDQUF3Qyx5Q0FBeUM7V0FDakY7V0FDQTtXQUNBLEU7Ozs7O1dDUEEsc0Y7Ozs7O1dDQUE7V0FDQTtXQUNBO1dBQ0Esc0RBQXNELGtCQUFrQjtXQUN4RTtXQUNBLCtDQUErQyxjQUFjO1dBQzdELEU7Ozs7VUNOQTtVQUNBO1VBQ0E7VUFDQSIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBQYWRkbGUge1xyXG4gICAgY29uc3RydWN0b3IoZ2FtZVdpZHRoLCBnYW1lSGVpZ2h0KSB7XHJcbiAgICAgICAgdGhpcy5nYW1lV2lkdGggPSBnYW1lV2lkdGg7XHJcbiAgICAgICAgdGhpcy5nYW1lSGVpZ2h0ID0gZ2FtZUhlaWdodDtcclxuICAgICAgICB0aGlzLnJhZGl1cyA9IDEwO1xyXG4gICAgICAgIHRoaXMucGFkZGluZyA9IDE7XHJcbiAgICAgICAgdGhpcy5zcGVlZCA9IDQwO1xyXG4gICAgICAgIHRoaXMudnggPSAxO1xyXG4gICAgICAgIHRoaXMudnkgPSAtMTtcclxuICAgICAgICB0aGlzLnggPSAodGhpcy5nYW1lV2lkdGggLSB0aGlzLnJhZGl1cykgLyAyO1xyXG4gICAgICAgIHRoaXMueSA9ICh0aGlzLmdhbWVIZWlnaHQgLSB0aGlzLnJhZGl1cyAtIHRoaXMucGFkZGluZykgLyAyO1xyXG4gICAgICAgIHRoaXMuZGlyZWN0aW9uID0gbnVsbDtcclxuICAgIH1cclxuICAgIG1vdmVMZWZ0KCkge1xyXG4gICAgICAgIHRoaXMuZGlyZWN0aW9uID0gJ2xlZnQnO1xyXG4gICAgfVxyXG4gICAgc3RvcExlZnQoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuZGlyZWN0aW9uICE9PSAnbGVmdCcpXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB0aGlzLmRpcmVjdGlvbiA9IG51bGw7XHJcbiAgICB9XHJcbiAgICBtb3ZlUmlnaHQoKSB7XHJcbiAgICAgICAgdGhpcy5kaXJlY3Rpb24gPSAncmlnaHQnO1xyXG4gICAgfVxyXG4gICAgc3RvcFJpZ2h0KCkge1xyXG4gICAgICAgIGlmICh0aGlzLmRpcmVjdGlvbiAhPT0gJ3JpZ2h0JylcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIHRoaXMuZGlyZWN0aW9uID0gbnVsbDtcclxuICAgIH1cclxuICAgIHN0b3AoKSB7XHJcbiAgICAgICAgdGhpcy5kaXJlY3Rpb24gPSBudWxsO1xyXG4gICAgfVxyXG4gICAgdXBkYXRlKGRlbHRhVGltZSkge1xyXG4gICAgICAgIHRoaXMueCArPSAodGhpcy52eCAqIHRoaXMuc3BlZWQpIC8gZGVsdGFUaW1lO1xyXG4gICAgICAgIHRoaXMueSArPSAodGhpcy52eSAqIHRoaXMuc3BlZWQpIC8gZGVsdGFUaW1lO1xyXG4gICAgICAgIGlmICh0aGlzLnggPCAwICsgdGhpcy5yYWRpdXMgKyB0aGlzLnBhZGRpbmcpIHtcclxuICAgICAgICAgICAgdGhpcy54ID0gdGhpcy5yYWRpdXMgKyB0aGlzLnBhZGRpbmc7XHJcbiAgICAgICAgICAgIHRoaXMudnggPSAtdGhpcy52eDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMueCArIHRoaXMucmFkaXVzID4gdGhpcy5nYW1lV2lkdGggLSB0aGlzLnBhZGRpbmcpIHtcclxuICAgICAgICAgICAgdGhpcy54ID0gdGhpcy5nYW1lV2lkdGggLSB0aGlzLnJhZGl1cyAtIHRoaXMucGFkZGluZztcclxuICAgICAgICAgICAgdGhpcy52eCA9IC10aGlzLnZ4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy55IDwgMCArIHRoaXMucmFkaXVzICsgdGhpcy5wYWRkaW5nKSB7XHJcbiAgICAgICAgICAgIHRoaXMueSA9IHRoaXMucmFkaXVzICsgdGhpcy5wYWRkaW5nO1xyXG4gICAgICAgICAgICB0aGlzLnZ5ID0gLXRoaXMudnk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLnkgPiB0aGlzLmdhbWVIZWlnaHQgLSB0aGlzLnJhZGl1cyAtIHRoaXMucGFkZGluZykge1xyXG4gICAgICAgICAgICB0aGlzLnkgPSB0aGlzLmdhbWVIZWlnaHQgLSB0aGlzLnJhZGl1cyAtIHRoaXMucGFkZGluZztcclxuICAgICAgICAgICAgdGhpcy52eSA9IC10aGlzLnZ5O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGRyYXcoY29udGV4dCkge1xyXG4gICAgICAgIGNvbnN0IHsgeCwgeSwgcmFkaXVzIH0gPSB0aGlzO1xyXG4gICAgICAgIGNvbnRleHQuYmVnaW5QYXRoKCk7XHJcbiAgICAgICAgY29udGV4dC5hcmMoeCwgeSwgcmFkaXVzLCAwLCAyICogTWF0aC5QSSk7XHJcbiAgICAgICAgY29udGV4dC5maWxsKCk7XHJcbiAgICAgICAgY29udGV4dC5jbG9zZVBhdGgoKTtcclxuICAgIH1cclxufVxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lRbUZzYkM1cWN5SXNJbk52ZFhKalpWSnZiM1FpT2lJaUxDSnpiM1Z5WTJWeklqcGJJaTR1TDNOeVl5OUNZV3hzTG5SeklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMRTFCUVUwc1EwRkJReXhQUVVGUExFOUJRVThzVFVGQlRUdEpRVlY2UWl4WlFVRnZRaXhUUVVGcFFpeEZRVUZWTEZWQlFXdENPMUZCUVRkRExHTkJRVk1zUjBGQlZDeFRRVUZUTEVOQlFWRTdVVUZCVlN4bFFVRlZMRWRCUVZZc1ZVRkJWU3hEUVVGUk8xRkJWSHBFTEZkQlFVMHNSMEZCUnl4RlFVRkZMRU5CUVVFN1VVRkRXQ3haUVVGUExFZEJRVWNzUTBGQlF5eERRVUZCTzFGQlExZ3NWVUZCU3l4SFFVRkhMRVZCUVVVc1EwRkJRVHRSUVVkV0xFOUJRVVVzUjBGQlJ5eERRVUZETEVOQlFVRTdVVUZEVGl4UFFVRkZMRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVUU3VVVGSllpeEpRVUZKTEVOQlFVTXNRMEZCUXl4SFFVRkhMRU5CUVVNc1NVRkJTU3hEUVVGRExGTkJRVk1zUjBGQlJ5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGQk8xRkJRek5ETEVsQlFVa3NRMEZCUXl4RFFVRkRMRWRCUVVjc1EwRkJReXhKUVVGSkxFTkJRVU1zVlVGQlZTeEhRVUZITEVsQlFVa3NRMEZCUXl4TlFVRk5MRWRCUVVjc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUVR0UlFVTXpSQ3hKUVVGSkxFTkJRVU1zVTBGQlV5eEhRVUZITEVsQlFVa3NRMEZCUVR0SlFVTjJRaXhEUVVGRE8wbEJSVTBzVVVGQlVUdFJRVU5pTEVsQlFVa3NRMEZCUXl4VFFVRlRMRWRCUVVjc1RVRkJUU3hEUVVGQk8wbEJRM3BDTEVOQlFVTTdTVUZGVFN4UlFVRlJPMUZCUTJJc1NVRkJTU3hKUVVGSkxFTkJRVU1zVTBGQlV5eExRVUZMTEUxQlFVMDdXVUZCUlN4UFFVRk5PMUZCUTNKRExFbEJRVWtzUTBGQlF5eFRRVUZUTEVkQlFVY3NTVUZCU1N4RFFVRkJPMGxCUTNaQ0xFTkJRVU03U1VGRlRTeFRRVUZUTzFGQlEyUXNTVUZCU1N4RFFVRkRMRk5CUVZNc1IwRkJSeXhQUVVGUExFTkJRVUU3U1VGRE1VSXNRMEZCUXp0SlFVVk5MRk5CUVZNN1VVRkRaQ3hKUVVGSkxFbEJRVWtzUTBGQlF5eFRRVUZUTEV0QlFVc3NUMEZCVHp0WlFVRkZMRTlCUVUwN1VVRkRkRU1zU1VGQlNTeERRVUZETEZOQlFWTXNSMEZCUnl4SlFVRkpMRU5CUVVFN1NVRkRka0lzUTBGQlF6dEpRVVZOTEVsQlFVazdVVUZEVkN4SlFVRkpMRU5CUVVNc1UwRkJVeXhIUVVGSExFbEJRVWtzUTBGQlFUdEpRVU4yUWl4RFFVRkRPMGxCUlUwc1RVRkJUU3hEUVVGRExGTkJRV2xDTzFGQlF6ZENMRWxCUVVrc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNSVUZCUlN4SFFVRkhMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUjBGQlJ5eFRRVUZUTEVOQlFVRTdVVUZETlVNc1NVRkJTU3hEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4RlFVRkZMRWRCUVVjc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eEhRVUZITEZOQlFWTXNRMEZCUVR0UlFVVTFReXhKUVVGSkxFbEJRVWtzUTBGQlF5eERRVUZETEVkQlFVY3NRMEZCUXl4SFFVRkhMRWxCUVVrc1EwRkJReXhOUVVGTkxFZEJRVWNzU1VGQlNTeERRVUZETEU5QlFVOHNSVUZCUlR0WlFVTXpReXhKUVVGSkxFTkJRVU1zUTBGQlF5eEhRVUZITEVsQlFVa3NRMEZCUXl4TlFVRk5MRWRCUVVjc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlFUdFpRVU51UXl4SlFVRkpMRU5CUVVNc1JVRkJSU3hIUVVGSExFTkJRVU1zU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUVR0VFFVTnVRanRSUVVORUxFbEJRVWtzU1VGQlNTeERRVUZETEVOQlFVTXNSMEZCUnl4SlFVRkpMRU5CUVVNc1RVRkJUU3hIUVVGSExFbEJRVWtzUTBGQlF5eFRRVUZUTEVkQlFVY3NTVUZCU1N4RFFVRkRMRTlCUVU4c1JVRkJSVHRaUVVONFJDeEpRVUZKTEVOQlFVTXNRMEZCUXl4SFFVRkhMRWxCUVVrc1EwRkJReXhUUVVGVExFZEJRVWNzU1VGQlNTeERRVUZETEUxQlFVMHNSMEZCUnl4SlFVRkpMRU5CUVVNc1QwRkJUeXhEUVVGQk8xbEJRM0JFTEVsQlFVa3NRMEZCUXl4RlFVRkZMRWRCUVVjc1EwRkJReXhKUVVGSkxFTkJRVU1zUlVGQlJTeERRVUZCTzFOQlEyNUNPMUZCUlVRc1NVRkJTU3hKUVVGSkxFTkJRVU1zUTBGQlF5eEhRVUZITEVOQlFVTXNSMEZCUnl4SlFVRkpMRU5CUVVNc1RVRkJUU3hIUVVGSExFbEJRVWtzUTBGQlF5eFBRVUZQTEVWQlFVVTdXVUZETTBNc1NVRkJTU3hEUVVGRExFTkJRVU1zUjBGQlJ5eEpRVUZKTEVOQlFVTXNUVUZCVFN4SFFVRkhMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVUU3V1VGRGJrTXNTVUZCU1N4RFFVRkRMRVZCUVVVc1IwRkJSeXhEUVVGRExFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVRTdVMEZEYmtJN1VVRkRSQ3hKUVVGSkxFbEJRVWtzUTBGQlF5eERRVUZETEVkQlFVY3NTVUZCU1N4RFFVRkRMRlZCUVZVc1IwRkJSeXhKUVVGSkxFTkJRVU1zVFVGQlRTeEhRVUZITEVsQlFVa3NRMEZCUXl4UFFVRlBMRVZCUVVVN1dVRkRla1FzU1VGQlNTeERRVUZETEVOQlFVTXNSMEZCUnl4SlFVRkpMRU5CUVVNc1ZVRkJWU3hIUVVGSExFbEJRVWtzUTBGQlF5eE5RVUZOTEVkQlFVY3NTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJRVHRaUVVOeVJDeEpRVUZKTEVOQlFVTXNSVUZCUlN4SFFVRkhMRU5CUVVNc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlFUdFRRVU51UWp0SlFVTklMRU5CUVVNN1NVRkZUU3hKUVVGSkxFTkJRVU1zVDBGQmFVTTdVVUZETTBNc1RVRkJUU3hGUVVGRkxFTkJRVU1zUlVGQlJTeERRVUZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRWRCUVVjc1NVRkJTU3hEUVVGQk8xRkJRemRDTEU5QlFVOHNRMEZCUXl4VFFVRlRMRVZCUVVVc1EwRkJRVHRSUVVOdVFpeFBRVUZQTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEVOQlFVTXNSVUZCUlN4RFFVRkRMRWRCUVVjc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eERRVUZCTzFGQlEzcERMRTlCUVU4c1EwRkJReXhKUVVGSkxFVkJRVVVzUTBGQlFUdFJRVU5rTEU5QlFVOHNRMEZCUXl4VFFVRlRMRVZCUVVVc1EwRkJRVHRKUVVOeVFpeERRVUZETzBOQlEwWWlmUT09IiwiaW1wb3J0IHsgS0VZUyB9IGZyb20gJy4vZW51bXMnO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBJbnB1dEhhbmRsZXIge1xyXG4gICAgY29uc3RydWN0b3IoaGFuZGxlcnMpIHtcclxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGtleURvd25FdmVudCkgPT4ge1xyXG4gICAgICAgICAgICAvLyBrZXlEb3duRXZlbnQucHJldmVudERlZmF1bHQoKVxyXG4gICAgICAgICAgICBpZiAoa2V5RG93bkV2ZW50LmNvZGUgPT09IEtFWVMuTEVGVClcclxuICAgICAgICAgICAgICAgIGhhbmRsZXJzLmFycm93TGVmdFByZXNzZWQoKTtcclxuICAgICAgICAgICAgZWxzZSBpZiAoa2V5RG93bkV2ZW50LmNvZGUgPT09IEtFWVMuUklHSFQpXHJcbiAgICAgICAgICAgICAgICBoYW5kbGVycy5hcnJvd1JpZ2h0UHJlc3NlZCgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgKGtleURvd25FdmVudCkgPT4ge1xyXG4gICAgICAgICAgICAvLyBrZXlEb3duRXZlbnQucHJldmVudERlZmF1bHQoKVxyXG4gICAgICAgICAgICBpZiAoa2V5RG93bkV2ZW50LmNvZGUgPT09IEtFWVMuTEVGVClcclxuICAgICAgICAgICAgICAgIGhhbmRsZXJzLmFycm93TGVmdFJlbGVhc2VkKCk7XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKGtleURvd25FdmVudC5jb2RlID09PSBLRVlTLlJJR0hUKVxyXG4gICAgICAgICAgICAgICAgaGFuZGxlcnMuYXJyb3dSaWdodFJlbGVhc2VkKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pU1c1d2RYUklZVzVrYkdWeUxtcHpJaXdpYzI5MWNtTmxVbTl2ZENJNklpSXNJbk52ZFhKalpYTWlPbHNpTGk0dmMzSmpMMGx1Y0hWMFNHRnVaR3hsY2k1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3hQUVVGUExFVkJRVVVzU1VGQlNTeEZRVUZGTEUxQlFVMHNVMEZCVXl4RFFVRkJPMEZCVXpsQ0xFMUJRVTBzUTBGQlF5eFBRVUZQTEU5QlFVOHNXVUZCV1R0SlFVTXZRaXhaUVVGWkxGRkJRWGRDTzFGQlEyeERMRkZCUVZFc1EwRkJReXhuUWtGQlowSXNRMEZCUXl4VFFVRlRMRVZCUVVVc1EwRkJReXhaUVVGWkxFVkJRVVVzUlVGQlJUdFpRVU53UkN4blEwRkJaME03V1VGRGFFTXNTVUZCU1N4WlFVRlpMRU5CUVVNc1NVRkJTU3hMUVVGTExFbEJRVWtzUTBGQlF5eEpRVUZKTzJkQ1FVRkZMRkZCUVZFc1EwRkJReXhuUWtGQlowSXNSVUZCUlN4RFFVRkJPMmxDUVVNelJDeEpRVUZKTEZsQlFWa3NRMEZCUXl4SlFVRkpMRXRCUVVzc1NVRkJTU3hEUVVGRExFdEJRVXM3WjBKQlFVVXNVVUZCVVN4RFFVRkRMR2xDUVVGcFFpeEZRVUZGTEVOQlFVRTdVVUZEZWtVc1EwRkJReXhEUVVGRExFTkJRVUU3VVVGRlJpeFJRVUZSTEVOQlFVTXNaMEpCUVdkQ0xFTkJRVU1zVDBGQlR5eEZRVUZGTEVOQlFVTXNXVUZCV1N4RlFVRkZMRVZCUVVVN1dVRkRiRVFzWjBOQlFXZERPMWxCUTJoRExFbEJRVWtzV1VGQldTeERRVUZETEVsQlFVa3NTMEZCU3l4SlFVRkpMRU5CUVVNc1NVRkJTVHRuUWtGQlJTeFJRVUZSTEVOQlFVTXNhVUpCUVdsQ0xFVkJRVVVzUTBGQlFUdHBRa0ZETlVRc1NVRkJTU3haUVVGWkxFTkJRVU1zU1VGQlNTeExRVUZMTEVsQlFVa3NRMEZCUXl4TFFVRkxPMmRDUVVGRkxGRkJRVkVzUTBGQlF5eHJRa0ZCYTBJc1JVRkJSU3hEUVVGQk8xRkJRekZGTEVOQlFVTXNRMEZCUXl4RFFVRkJPMGxCUTBvc1EwRkJRenREUVVOR0luMD0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQYWRkbGUge1xyXG4gICAgY29uc3RydWN0b3IoZ2FtZVdpZHRoLCBnYW1lSGVpZ2h0KSB7XHJcbiAgICAgICAgdGhpcy5nYW1lV2lkdGggPSBnYW1lV2lkdGg7XHJcbiAgICAgICAgdGhpcy5nYW1lSGVpZ2h0ID0gZ2FtZUhlaWdodDtcclxuICAgICAgICB0aGlzLndpZHRoID0gMTUwO1xyXG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gMjU7XHJcbiAgICAgICAgdGhpcy5wYWRkaW5nID0gNTtcclxuICAgICAgICB0aGlzLnNwZWVkID0gNDA7XHJcbiAgICAgICAgdGhpcy54ID0gKHRoaXMuZ2FtZVdpZHRoIC0gdGhpcy53aWR0aCkgLyAyO1xyXG4gICAgICAgIHRoaXMueSA9IHRoaXMuZ2FtZUhlaWdodCAtIHRoaXMuaGVpZ2h0IC0gdGhpcy5wYWRkaW5nO1xyXG4gICAgICAgIHRoaXMuZGlyZWN0aW9uID0gbnVsbDtcclxuICAgIH1cclxuICAgIG1vdmVMZWZ0KCkge1xyXG4gICAgICAgIHRoaXMuZGlyZWN0aW9uID0gJ2xlZnQnO1xyXG4gICAgfVxyXG4gICAgc3RvcExlZnQoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuZGlyZWN0aW9uICE9PSAnbGVmdCcpXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB0aGlzLmRpcmVjdGlvbiA9IG51bGw7XHJcbiAgICB9XHJcbiAgICBtb3ZlUmlnaHQoKSB7XHJcbiAgICAgICAgdGhpcy5kaXJlY3Rpb24gPSAncmlnaHQnO1xyXG4gICAgfVxyXG4gICAgc3RvcFJpZ2h0KCkge1xyXG4gICAgICAgIGlmICh0aGlzLmRpcmVjdGlvbiAhPT0gJ3JpZ2h0JylcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIHRoaXMuZGlyZWN0aW9uID0gbnVsbDtcclxuICAgIH1cclxuICAgIHN0b3AoKSB7XHJcbiAgICAgICAgdGhpcy5kaXJlY3Rpb24gPSBudWxsO1xyXG4gICAgfVxyXG4gICAgdXBkYXRlKGRlbHRhVGltZSkge1xyXG4gICAgICAgIGlmICh0aGlzLmRpcmVjdGlvbiA9PT0gbnVsbClcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuZGlyZWN0aW9uID09PSAnbGVmdCcpXHJcbiAgICAgICAgICAgIHRoaXMueCAtPSB0aGlzLnNwZWVkIC8gZGVsdGFUaW1lO1xyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuZGlyZWN0aW9uID09PSAncmlnaHQnKVxyXG4gICAgICAgICAgICB0aGlzLnggKz0gdGhpcy5zcGVlZCAvIGRlbHRhVGltZTtcclxuICAgICAgICBpZiAodGhpcy54IDwgMCArIHRoaXMucGFkZGluZykge1xyXG4gICAgICAgICAgICB0aGlzLnggPSB0aGlzLnBhZGRpbmc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLnggKyB0aGlzLndpZHRoID4gdGhpcy5nYW1lV2lkdGggLSB0aGlzLnBhZGRpbmcpIHtcclxuICAgICAgICAgICAgdGhpcy54ID0gdGhpcy5nYW1lV2lkdGggLSB0aGlzLndpZHRoIC0gdGhpcy5wYWRkaW5nO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGRyYXcoY29udGV4dCkge1xyXG4gICAgICAgIGNvbnN0IHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9ID0gdGhpcztcclxuICAgICAgICBjb250ZXh0LmZpbGxSZWN0KHgsIHksIHdpZHRoLCBoZWlnaHQpO1xyXG4gICAgfVxyXG59XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaVVHRmtaR3hsTG1weklpd2ljMjkxY21ObFVtOXZkQ0k2SWlJc0luTnZkWEpqWlhNaU9sc2lMaTR2YzNKakwxQmhaR1JzWlM1MGN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3hOUVVGTkxFTkJRVU1zVDBGQlR5eFBRVUZQTEUxQlFVMDdTVUZUZWtJc1dVRkJiMElzVTBGQmFVSXNSVUZCVlN4VlFVRnJRanRSUVVFM1F5eGpRVUZUTEVkQlFWUXNVMEZCVXl4RFFVRlJPMUZCUVZVc1pVRkJWU3hIUVVGV0xGVkJRVlVzUTBGQlVUdFJRVko2UkN4VlFVRkxMRWRCUVVjc1IwRkJSeXhEUVVGQk8xRkJRMWdzVjBGQlRTeEhRVUZITEVWQlFVVXNRMEZCUVR0UlFVTllMRmxCUVU4c1IwRkJSeXhEUVVGRExFTkJRVUU3VVVGRFdDeFZRVUZMTEVkQlFVY3NSVUZCUlN4RFFVRkJPMUZCVFdoQ0xFbEJRVWtzUTBGQlF5eERRVUZETEVkQlFVY3NRMEZCUXl4SlFVRkpMRU5CUVVNc1UwRkJVeXhIUVVGSExFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVFN1VVRkRNVU1zU1VGQlNTeERRVUZETEVOQlFVTXNSMEZCUnl4SlFVRkpMRU5CUVVNc1ZVRkJWU3hIUVVGSExFbEJRVWtzUTBGQlF5eE5RVUZOTEVkQlFVY3NTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJRVHRSUVVOeVJDeEpRVUZKTEVOQlFVTXNVMEZCVXl4SFFVRkhMRWxCUVVrc1EwRkJRVHRKUVVOMlFpeERRVUZETzBsQlJVMHNVVUZCVVR0UlFVTmlMRWxCUVVrc1EwRkJReXhUUVVGVExFZEJRVWNzVFVGQlRTeERRVUZCTzBsQlEzcENMRU5CUVVNN1NVRkZUU3hSUVVGUk8xRkJRMklzU1VGQlNTeEpRVUZKTEVOQlFVTXNVMEZCVXl4TFFVRkxMRTFCUVUwN1dVRkJSU3hQUVVGTk8xRkJRM0pETEVsQlFVa3NRMEZCUXl4VFFVRlRMRWRCUVVjc1NVRkJTU3hEUVVGQk8wbEJRM1pDTEVOQlFVTTdTVUZGVFN4VFFVRlRPMUZCUTJRc1NVRkJTU3hEUVVGRExGTkJRVk1zUjBGQlJ5eFBRVUZQTEVOQlFVRTdTVUZETVVJc1EwRkJRenRKUVVWTkxGTkJRVk03VVVGRFpDeEpRVUZKTEVsQlFVa3NRMEZCUXl4VFFVRlRMRXRCUVVzc1QwRkJUenRaUVVGRkxFOUJRVTA3VVVGRGRFTXNTVUZCU1N4RFFVRkRMRk5CUVZNc1IwRkJSeXhKUVVGSkxFTkJRVUU3U1VGRGRrSXNRMEZCUXp0SlFVVk5MRWxCUVVrN1VVRkRWQ3hKUVVGSkxFTkJRVU1zVTBGQlV5eEhRVUZITEVsQlFVa3NRMEZCUVR0SlFVTjJRaXhEUVVGRE8wbEJSVTBzVFVGQlRTeERRVUZETEZOQlFXbENPMUZCUXpkQ0xFbEJRVWtzU1VGQlNTeERRVUZETEZOQlFWTXNTMEZCU3l4SlFVRkpPMWxCUVVVc1QwRkJUVHRoUVVNNVFpeEpRVUZKTEVsQlFVa3NRMEZCUXl4VFFVRlRMRXRCUVVzc1RVRkJUVHRaUVVGRkxFbEJRVWtzUTBGQlF5eERRVUZETEVsQlFVa3NTVUZCU1N4RFFVRkRMRXRCUVVzc1IwRkJSeXhUUVVGVExFTkJRVUU3WVVGREwwUXNTVUZCU1N4SlFVRkpMRU5CUVVNc1UwRkJVeXhMUVVGTExFOUJRVTg3V1VGQlJTeEpRVUZKTEVOQlFVTXNRMEZCUXl4SlFVRkpMRWxCUVVrc1EwRkJReXhMUVVGTExFZEJRVWNzVTBGQlV5eERRVUZCTzFGQlJYSkZMRWxCUVVrc1NVRkJTU3hEUVVGRExFTkJRVU1zUjBGQlJ5eERRVUZETEVkQlFVY3NTVUZCU1N4RFFVRkRMRTlCUVU4c1JVRkJSVHRaUVVNM1FpeEpRVUZKTEVOQlFVTXNRMEZCUXl4SFFVRkhMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVUU3VTBGRGRFSTdVVUZEUkN4SlFVRkpMRWxCUVVrc1EwRkJReXhEUVVGRExFZEJRVWNzU1VGQlNTeERRVUZETEV0QlFVc3NSMEZCUnl4SlFVRkpMRU5CUVVNc1UwRkJVeXhIUVVGSExFbEJRVWtzUTBGQlF5eFBRVUZQTEVWQlFVVTdXVUZEZGtRc1NVRkJTU3hEUVVGRExFTkJRVU1zUjBGQlJ5eEpRVUZKTEVOQlFVTXNVMEZCVXl4SFFVRkhMRWxCUVVrc1EwRkJReXhMUVVGTExFZEJRVWNzU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUVR0VFFVTndSRHRKUVVOSUxFTkJRVU03U1VGRlRTeEpRVUZKTEVOQlFVTXNUMEZCYVVNN1VVRkRNME1zVFVGQlRTeEZRVUZGTEVOQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVVc1MwRkJTeXhGUVVGRkxFMUJRVTBzUlVGQlJTeEhRVUZITEVsQlFVa3NRMEZCUVR0UlFVTndReXhQUVVGUExFTkJRVU1zVVVGQlVTeERRVUZETEVOQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVVc1MwRkJTeXhGUVVGRkxFMUJRVTBzUTBGQlF5eERRVUZCTzBsQlEzWkRMRU5CUVVNN1EwRkRSaUo5IiwiZXhwb3J0IHZhciBLRVlTO1xyXG4oZnVuY3Rpb24gKEtFWVMpIHtcclxuICAgIEtFWVNbXCJMRUZUXCJdID0gXCJBcnJvd0xlZnRcIjtcclxuICAgIEtFWVNbXCJSSUdIVFwiXSA9IFwiQXJyb3dSaWdodFwiO1xyXG59KShLRVlTIHx8IChLRVlTID0ge30pKTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pWlc1MWJYTXVhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOXpjbU12Wlc1MWJYTXVkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1RVRkJUU3hEUVVGT0xFbEJRVmtzU1VGSFdEdEJRVWhFTEZkQlFWa3NTVUZCU1R0SlFVTmtMREJDUVVGclFpeERRVUZCTzBsQlEyeENMRFJDUVVGdlFpeERRVUZCTzBGQlEzUkNMRU5CUVVNc1JVRklWeXhKUVVGSkxFdEJRVW9zU1VGQlNTeFJRVWRtSW4wPSIsImltcG9ydCBJbnB1dEhhbmRsZXIgZnJvbSAnLi9JbnB1dEhhbmRsZXInO1xyXG5pbXBvcnQgQmFsbCBmcm9tICcuL0JhbGwnO1xyXG5pbXBvcnQgUGFkZGxlIGZyb20gJy4vUGFkZGxlJztcclxuY29uc3QgR0FNRV9XSURUSCA9IDkwMDtcclxuY29uc3QgR0FNRV9IRUlHSFQgPSA2MDA7XHJcbmNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNzY3JlZW4nKTtcclxuY29uc3QgY29udGV4dCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xyXG5jb25zdCBwYWRkbGUgPSBuZXcgUGFkZGxlKEdBTUVfV0lEVEgsIEdBTUVfSEVJR0hUKTtcclxuY29uc3QgYmFsbCA9IG5ldyBCYWxsKEdBTUVfV0lEVEgsIEdBTUVfSEVJR0hUKTtcclxubmV3IElucHV0SGFuZGxlcih7XHJcbiAgICBhcnJvd0xlZnRQcmVzc2VkOiAoKSA9PiBwYWRkbGUubW92ZUxlZnQoKSxcclxuICAgIGFycm93TGVmdFJlbGVhc2VkOiAoKSA9PiBwYWRkbGUuc3RvcExlZnQoKSxcclxuICAgIGFycm93UmlnaHRQcmVzc2VkOiAoKSA9PiBwYWRkbGUubW92ZVJpZ2h0KCksXHJcbiAgICBhcnJvd1JpZ2h0UmVsZWFzZWQ6ICgpID0+IHBhZGRsZS5zdG9wUmlnaHQoKSxcclxufSk7XHJcbmxldCBsYXN0VGltZSA9IDA7XHJcbmZ1bmN0aW9uIGdhbWVMb29wKHRpbWVzdGFtcCkge1xyXG4gICAgbGV0IGRlbHRhVGltZSA9IHRpbWVzdGFtcCAtIGxhc3RUaW1lO1xyXG4gICAgbGFzdFRpbWUgPSB0aW1lc3RhbXA7XHJcbiAgICBjb250ZXh0LmNsZWFyUmVjdCgwLCAwLCBHQU1FX1dJRFRILCBHQU1FX0hFSUdIVCk7XHJcbiAgICBwYWRkbGUudXBkYXRlKGRlbHRhVGltZSk7XHJcbiAgICBwYWRkbGUuZHJhdyhjb250ZXh0KTtcclxuICAgIGJhbGwudXBkYXRlKGRlbHRhVGltZSk7XHJcbiAgICBiYWxsLmRyYXcoY29udGV4dCk7XHJcbiAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGdhbWVMb29wKTtcclxufVxyXG5nYW1lTG9vcCgxKTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYVc1a1pYZ3Vhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOXpjbU12YVc1a1pYZ3VkSE1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1QwRkJUeXhaUVVGWkxFMUJRVTBzWjBKQlFXZENMRU5CUVVFN1FVRkRla01zVDBGQlR5eEpRVUZKTEUxQlFVMHNVVUZCVVN4RFFVRkJPMEZCUTNwQ0xFOUJRVThzVFVGQlRTeE5RVUZOTEZWQlFWVXNRMEZCUVR0QlFVVTNRaXhOUVVGTkxGVkJRVlVzUjBGQlJ5eEhRVUZITEVOQlFVRTdRVUZEZEVJc1RVRkJUU3hYUVVGWExFZEJRVWNzUjBGQlJ5eERRVUZCTzBGQlJYWkNMRTFCUVUwc1RVRkJUU3hIUVVGSExGRkJRVkVzUTBGQlF5eGhRVUZoTEVOQlFXOUNMRk5CUVZNc1EwRkJSU3hEUVVGQk8wRkJRM0JGTEUxQlFVMHNUMEZCVHl4SFFVRkhMRTFCUVUwc1EwRkJReXhWUVVGVkxFTkJRVU1zU1VGQlNTeERRVUZGTEVOQlFVRTdRVUZGZUVNc1RVRkJUU3hOUVVGTkxFZEJRVWNzU1VGQlNTeE5RVUZOTEVOQlFVTXNWVUZCVlN4RlFVRkZMRmRCUVZjc1EwRkJReXhEUVVGQk8wRkJRMnhFTEUxQlFVMHNTVUZCU1N4SFFVRkhMRWxCUVVrc1NVRkJTU3hEUVVGRExGVkJRVlVzUlVGQlJTeFhRVUZYTEVOQlFVTXNRMEZCUVR0QlFVVTVReXhKUVVGSkxGbEJRVmtzUTBGQlF6dEpRVU5tTEdkQ1FVRm5RaXhGUVVGRkxFZEJRVWNzUlVGQlJTeERRVUZETEUxQlFVMHNRMEZCUXl4UlFVRlJMRVZCUVVVN1NVRkRla01zYVVKQlFXbENMRVZCUVVVc1IwRkJSeXhGUVVGRkxFTkJRVU1zVFVGQlRTeERRVUZETEZGQlFWRXNSVUZCUlR0SlFVTXhReXhwUWtGQmFVSXNSVUZCUlN4SFFVRkhMRVZCUVVVc1EwRkJReXhOUVVGTkxFTkJRVU1zVTBGQlV5eEZRVUZGTzBsQlF6TkRMR3RDUVVGclFpeEZRVUZGTEVkQlFVY3NSVUZCUlN4RFFVRkRMRTFCUVUwc1EwRkJReXhUUVVGVExFVkJRVVU3UTBGRE4wTXNRMEZCUXl4RFFVRkJPMEZCUlVZc1NVRkJTU3hSUVVGUkxFZEJRVWNzUTBGQlF5eERRVUZCTzBGQlEyaENMRk5CUVZNc1VVRkJVU3hEUVVGRExGTkJRVGhDTzBsQlF6bERMRWxCUVVrc1UwRkJVeXhIUVVGSExGTkJRVk1zUjBGQlJ5eFJRVUZSTEVOQlFVRTdTVUZEY0VNc1VVRkJVU3hIUVVGSExGTkJRVk1zUTBGQlFUdEpRVVZ3UWl4UFFVRlBMRU5CUVVNc1UwRkJVeXhEUVVGRExFTkJRVU1zUlVGQlJTeERRVUZETEVWQlFVVXNWVUZCVlN4RlFVRkZMRmRCUVZjc1EwRkJReXhEUVVGQk8wbEJSV2hFTEUxQlFVMHNRMEZCUXl4TlFVRk5MRU5CUVVNc1UwRkJVeXhEUVVGRExFTkJRVUU3U1VGRGVFSXNUVUZCVFN4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlFUdEpRVVZ3UWl4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExGTkJRVk1zUTBGQlF5eERRVUZCTzBsQlEzUkNMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETEVOQlFVRTdTVUZGYkVJc1RVRkJUU3hEUVVGRExIRkNRVUZ4UWl4RFFVRkRMRkZCUVZFc1EwRkJReXhEUVVGQk8wRkJSWGhETEVOQlFVTTdRVUZGUkN4UlFVRlJMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVUVpZlE9PSIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdGlmKF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0pIHtcblx0XHRyZXR1cm4gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkiLCIvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSAoZXhwb3J0cykgPT4ge1xuXHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblx0fVxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xufTsiLCIvLyBzdGFydHVwXG4vLyBMb2FkIGVudHJ5IG1vZHVsZVxuX193ZWJwYWNrX3JlcXVpcmVfXyhcIi4vc3JjL2luZGV4LnRzXCIpO1xuLy8gVGhpcyBlbnRyeSBtb2R1bGUgdXNlZCAnZXhwb3J0cycgc28gaXQgY2FuJ3QgYmUgaW5saW5lZFxuIl0sInNvdXJjZVJvb3QiOiIifQ==